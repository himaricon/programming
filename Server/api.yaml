openapi: 3.0.0
info:
  title: "SMS3000"
  description: "An API about Users and grades"
  version: "1.0.0"

servers:
  - url: "http://0.0.0.0:8080"

components:
  schemas:
    User:
      type: "object"
      required:
        - password
        - username
      properties:
        User_id:
          type: "integer"
        username:
          type: "string"
        password:
          type: "string"
        friends:
          type: "array"
        friends_requests:
          type: "array"
  parameters:
    password:
      name: "password"
      description: "password"
      in: path
      required: true
      schema: 
        type: "string"
    sender_username:
      name: "sender_username"
      description: "sender_usename"
      in: path
      required: true
      schema: 
        type: "string"
    receive_username:
      name: "sender_username"
      description: "sender_usename"
      in: path
      required: true
      schema: 
        type: "string"
    User_id:
      name: "User_id"
      description: "Unique identifier for user"
      in: path
      required: true
      schema:
        type: "integer"
    Data:
      name: "User_id"
      description: "Unique identifier for user"
      in: path
      required: true
      schema:
        type: "array"

paths:
  /signup:
    post:
      summary: Register a new user
      operationId: user.create
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          description: Bad Request
  /login:
     post:
       summary: Log in
       operationId: user.login
       requestBody:
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 username:
                   type: string
                 password:
                   type: string
       responses:
         '200':
           description: Ok
         '401':
           description: Unauthorized
  /userdata:
     post:
       summary: Send Spotify music
       operationId: user.music
       requestBody:
         required: false
         content:
           application/json:
             schema:
               type: object
               properties:
                 username:
                   type: string
                 music:
                   type: string
       responses:
         '200':
           description: Ok
         '401':
           description: Unauthorized

  /update_friends:
     post:
       summary: Update friends
       operationId: user.manage_friend_requests
       requestBody:
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 username:
                   type: string
                 accepted_friends:
                   type: array
                 denied_friends:
                   type: array
       responses:
         '200':
           description: Ok
         '401':
           description: Unauthorized

  /spotify/send_friend_request:
     post:
       summary: Send friend request
       operationId: user.send_friend_request
       requestBody:
         required: false
         content:
           application/json:
             schema:
               type: object
               properties:
                 sender_username:
                   type: string
                 receive_username:
                   type: string
       responses:
         '200':
           description: Ok
         '401':
           description: Unauthorized

  /get_friends_requests:
      get:
        summary: Get motorcycle information by username
        operationId: user.get_friends_requests
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: string
          '400':
            description: Missing or invalid username
          '404':
            description: User not found

  /friends_music:
      get:
        summary: Get motorcycle information by username
        operationId: user.friends_music
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: string
          '400':
            description: Missing or invalid username
          '404':
            description: User not found
  /store_music:
      post:
        summary: Log in
        operationId: user.store_music
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_user:
                    type: string
                  data:
                    type: array
                  
        responses:
          '200':
            description: Ok
          '401':
            description: Unauthorized